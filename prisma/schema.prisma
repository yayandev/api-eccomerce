// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
   id       String    @id @default(auto()) @map("_id") @db.ObjectId
   name     String 
   email    String @unique
   password String
   avatar   String @default("")
   phone String @default("")
   address String @default("")
   isAdmin  Boolean @default(false)
   tokens    Token[]
   categories Category[]
   products Product[]
   carts Cart[]
   reviews Review[]
}

model Token {
   id       String    @id @default(auto()) @map("_id") @db.ObjectId
   user     User @relation(fields: [user_id], references: [id])
   user_id  String @db.ObjectId 
   token    String @unique
   login_time String
   logout_time String @default("")
   created_at  DateTime  @default(now())
   updated_at  DateTime  @updatedAt
   ip  String
   browser  String
   os  String
   device  String
   location  String
}

model Category {
   id       String    @id @default(auto()) @map("_id") @db.ObjectId
   name     String
   slug     String @unique
   user     User @relation(fields: [user_id], references: [id])
   user_id  String @db.ObjectId
   products Product[]
   created_at  DateTime  @default(now())
   updated_at  DateTime  @updatedAt
}

model Product {
   id       String    @id @default(auto()) @map("_id") @db.ObjectId
   name     String
   slug     String @unique
   user     User @relation(fields: [user_id], references: [id])
   user_id  String @db.ObjectId
   category Category @relation(fields: [category_id], references: [id])
   category_id  String @db.ObjectId
   imagesUrl   Json
   imagesFile  Json
   price      Float
   description String
   created_at  DateTime  @default(now())
   updated_at  DateTime  @updatedAt
   carts Cart[]
   reviews Review[]
   discountPercentage Int @default(0)
   stock Int 
   options Json?
}

model Cart {
   id       String    @id @default(auto()) @map("_id") @db.ObjectId
   user     User @relation(fields: [user_id], references: [id])
   user_id  String @db.ObjectId
   product_id  String @db.ObjectId
   product  Product @relation(fields: [product_id], references: [id])
   quantity Int
   created_at  DateTime  @default(now())
   updated_at  DateTime  @updatedAt
}

model Review {
   id       String    @id @default(auto()) @map("_id") @db.ObjectId
   user     User @relation(fields: [user_id], references: [id])
   user_id  String @db.ObjectId
   product_id  String @db.ObjectId
   product  Product @relation(fields: [product_id], references: [id])
   rating Int
   comment String
   created_at  DateTime  @default(now())
   updated_at  DateTime  @updatedAt
}